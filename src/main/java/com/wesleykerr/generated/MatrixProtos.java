// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/proto/matrix.proto

package com.wesleykerr.generated;

public final class MatrixProtos {
  private MatrixProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MatrixOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 rowCount = 1;
    /**
     * <code>required int32 rowCount = 1;</code>
     */
    boolean hasRowCount();
    /**
     * <code>required int32 rowCount = 1;</code>
     */
    int getRowCount();

    // required int32 colCount = 2;
    /**
     * <code>required int32 colCount = 2;</code>
     */
    boolean hasColCount();
    /**
     * <code>required int32 colCount = 2;</code>
     */
    int getColCount();

    // repeated double data = 3 [packed = true];
    /**
     * <code>repeated double data = 3 [packed = true];</code>
     */
    java.util.List<java.lang.Double> getDataList();
    /**
     * <code>repeated double data = 3 [packed = true];</code>
     */
    int getDataCount();
    /**
     * <code>repeated double data = 3 [packed = true];</code>
     */
    double getData(int index);

    // repeated int64 rowNames = 4;
    /**
     * <code>repeated int64 rowNames = 4;</code>
     */
    java.util.List<java.lang.Long> getRowNamesList();
    /**
     * <code>repeated int64 rowNames = 4;</code>
     */
    int getRowNamesCount();
    /**
     * <code>repeated int64 rowNames = 4;</code>
     */
    long getRowNames(int index);

    // repeated int64 colNames = 5;
    /**
     * <code>repeated int64 colNames = 5;</code>
     */
    java.util.List<java.lang.Long> getColNamesList();
    /**
     * <code>repeated int64 colNames = 5;</code>
     */
    int getColNamesCount();
    /**
     * <code>repeated int64 colNames = 5;</code>
     */
    long getColNames(int index);
  }
  /**
   * Protobuf type {@code Matrix}
   */
  public static final class Matrix extends
      com.google.protobuf.GeneratedMessage
      implements MatrixOrBuilder {
    // Use Matrix.newBuilder() to construct.
    private Matrix(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Matrix(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Matrix defaultInstance;
    public static Matrix getDefaultInstance() {
      return defaultInstance;
    }

    public Matrix getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Matrix(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              rowCount_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              colCount_ = input.readInt32();
              break;
            }
            case 25: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                data_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              data_.add(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                data_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                data_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                rowNames_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              rowNames_.add(input.readInt64());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                rowNames_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                rowNames_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                colNames_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000010;
              }
              colNames_.add(input.readInt64());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                colNames_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                colNames_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          data_ = java.util.Collections.unmodifiableList(data_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          rowNames_ = java.util.Collections.unmodifiableList(rowNames_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          colNames_ = java.util.Collections.unmodifiableList(colNames_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wesleykerr.generated.MatrixProtos.internal_static_Matrix_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wesleykerr.generated.MatrixProtos.internal_static_Matrix_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.wesleykerr.generated.MatrixProtos.Matrix.class, com.wesleykerr.generated.MatrixProtos.Matrix.Builder.class);
    }

    public static com.google.protobuf.Parser<Matrix> PARSER =
        new com.google.protobuf.AbstractParser<Matrix>() {
      public Matrix parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Matrix(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Matrix> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 rowCount = 1;
    public static final int ROWCOUNT_FIELD_NUMBER = 1;
    private int rowCount_;
    /**
     * <code>required int32 rowCount = 1;</code>
     */
    public boolean hasRowCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 rowCount = 1;</code>
     */
    public int getRowCount() {
      return rowCount_;
    }

    // required int32 colCount = 2;
    public static final int COLCOUNT_FIELD_NUMBER = 2;
    private int colCount_;
    /**
     * <code>required int32 colCount = 2;</code>
     */
    public boolean hasColCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 colCount = 2;</code>
     */
    public int getColCount() {
      return colCount_;
    }

    // repeated double data = 3 [packed = true];
    public static final int DATA_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Double> data_;
    /**
     * <code>repeated double data = 3 [packed = true];</code>
     */
    public java.util.List<java.lang.Double>
        getDataList() {
      return data_;
    }
    /**
     * <code>repeated double data = 3 [packed = true];</code>
     */
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated double data = 3 [packed = true];</code>
     */
    public double getData(int index) {
      return data_.get(index);
    }
    private int dataMemoizedSerializedSize = -1;

    // repeated int64 rowNames = 4;
    public static final int ROWNAMES_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Long> rowNames_;
    /**
     * <code>repeated int64 rowNames = 4;</code>
     */
    public java.util.List<java.lang.Long>
        getRowNamesList() {
      return rowNames_;
    }
    /**
     * <code>repeated int64 rowNames = 4;</code>
     */
    public int getRowNamesCount() {
      return rowNames_.size();
    }
    /**
     * <code>repeated int64 rowNames = 4;</code>
     */
    public long getRowNames(int index) {
      return rowNames_.get(index);
    }

    // repeated int64 colNames = 5;
    public static final int COLNAMES_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Long> colNames_;
    /**
     * <code>repeated int64 colNames = 5;</code>
     */
    public java.util.List<java.lang.Long>
        getColNamesList() {
      return colNames_;
    }
    /**
     * <code>repeated int64 colNames = 5;</code>
     */
    public int getColNamesCount() {
      return colNames_.size();
    }
    /**
     * <code>repeated int64 colNames = 5;</code>
     */
    public long getColNames(int index) {
      return colNames_.get(index);
    }

    private void initFields() {
      rowCount_ = 0;
      colCount_ = 0;
      data_ = java.util.Collections.emptyList();
      rowNames_ = java.util.Collections.emptyList();
      colNames_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRowCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasColCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, rowCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, colCount_);
      }
      if (getDataList().size() > 0) {
        output.writeRawVarint32(26);
        output.writeRawVarint32(dataMemoizedSerializedSize);
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeDoubleNoTag(data_.get(i));
      }
      for (int i = 0; i < rowNames_.size(); i++) {
        output.writeInt64(4, rowNames_.get(i));
      }
      for (int i = 0; i < colNames_.size(); i++) {
        output.writeInt64(5, colNames_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, rowCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, colCount_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDataList().size();
        size += dataSize;
        if (!getDataList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dataMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rowNames_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(rowNames_.get(i));
        }
        size += dataSize;
        size += 1 * getRowNamesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < colNames_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(colNames_.get(i));
        }
        size += dataSize;
        size += 1 * getColNamesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.wesleykerr.generated.MatrixProtos.Matrix parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wesleykerr.generated.MatrixProtos.Matrix parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wesleykerr.generated.MatrixProtos.Matrix parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.wesleykerr.generated.MatrixProtos.Matrix parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.wesleykerr.generated.MatrixProtos.Matrix parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wesleykerr.generated.MatrixProtos.Matrix parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.wesleykerr.generated.MatrixProtos.Matrix parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.wesleykerr.generated.MatrixProtos.Matrix parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.wesleykerr.generated.MatrixProtos.Matrix parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.wesleykerr.generated.MatrixProtos.Matrix parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.wesleykerr.generated.MatrixProtos.Matrix prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Matrix}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.wesleykerr.generated.MatrixProtos.MatrixOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.wesleykerr.generated.MatrixProtos.internal_static_Matrix_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.wesleykerr.generated.MatrixProtos.internal_static_Matrix_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.wesleykerr.generated.MatrixProtos.Matrix.class, com.wesleykerr.generated.MatrixProtos.Matrix.Builder.class);
      }

      // Construct using com.wesleykerr.generated.MatrixProtos.Matrix.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        rowCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        colCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        rowNames_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        colNames_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.wesleykerr.generated.MatrixProtos.internal_static_Matrix_descriptor;
      }

      public com.wesleykerr.generated.MatrixProtos.Matrix getDefaultInstanceForType() {
        return com.wesleykerr.generated.MatrixProtos.Matrix.getDefaultInstance();
      }

      public com.wesleykerr.generated.MatrixProtos.Matrix build() {
        com.wesleykerr.generated.MatrixProtos.Matrix result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.wesleykerr.generated.MatrixProtos.Matrix buildPartial() {
        com.wesleykerr.generated.MatrixProtos.Matrix result = new com.wesleykerr.generated.MatrixProtos.Matrix(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rowCount_ = rowCount_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.colCount_ = colCount_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          data_ = java.util.Collections.unmodifiableList(data_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.data_ = data_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          rowNames_ = java.util.Collections.unmodifiableList(rowNames_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.rowNames_ = rowNames_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          colNames_ = java.util.Collections.unmodifiableList(colNames_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.colNames_ = colNames_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.wesleykerr.generated.MatrixProtos.Matrix) {
          return mergeFrom((com.wesleykerr.generated.MatrixProtos.Matrix)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.wesleykerr.generated.MatrixProtos.Matrix other) {
        if (other == com.wesleykerr.generated.MatrixProtos.Matrix.getDefaultInstance()) return this;
        if (other.hasRowCount()) {
          setRowCount(other.getRowCount());
        }
        if (other.hasColCount()) {
          setColCount(other.getColCount());
        }
        if (!other.data_.isEmpty()) {
          if (data_.isEmpty()) {
            data_ = other.data_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDataIsMutable();
            data_.addAll(other.data_);
          }
          onChanged();
        }
        if (!other.rowNames_.isEmpty()) {
          if (rowNames_.isEmpty()) {
            rowNames_ = other.rowNames_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureRowNamesIsMutable();
            rowNames_.addAll(other.rowNames_);
          }
          onChanged();
        }
        if (!other.colNames_.isEmpty()) {
          if (colNames_.isEmpty()) {
            colNames_ = other.colNames_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureColNamesIsMutable();
            colNames_.addAll(other.colNames_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRowCount()) {
          
          return false;
        }
        if (!hasColCount()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.wesleykerr.generated.MatrixProtos.Matrix parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.wesleykerr.generated.MatrixProtos.Matrix) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 rowCount = 1;
      private int rowCount_ ;
      /**
       * <code>required int32 rowCount = 1;</code>
       */
      public boolean hasRowCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 rowCount = 1;</code>
       */
      public int getRowCount() {
        return rowCount_;
      }
      /**
       * <code>required int32 rowCount = 1;</code>
       */
      public Builder setRowCount(int value) {
        bitField0_ |= 0x00000001;
        rowCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 rowCount = 1;</code>
       */
      public Builder clearRowCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rowCount_ = 0;
        onChanged();
        return this;
      }

      // required int32 colCount = 2;
      private int colCount_ ;
      /**
       * <code>required int32 colCount = 2;</code>
       */
      public boolean hasColCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 colCount = 2;</code>
       */
      public int getColCount() {
        return colCount_;
      }
      /**
       * <code>required int32 colCount = 2;</code>
       */
      public Builder setColCount(int value) {
        bitField0_ |= 0x00000002;
        colCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 colCount = 2;</code>
       */
      public Builder clearColCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        colCount_ = 0;
        onChanged();
        return this;
      }

      // repeated double data = 3 [packed = true];
      private java.util.List<java.lang.Double> data_ = java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          data_ = new java.util.ArrayList<java.lang.Double>(data_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated double data = 3 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getDataList() {
        return java.util.Collections.unmodifiableList(data_);
      }
      /**
       * <code>repeated double data = 3 [packed = true];</code>
       */
      public int getDataCount() {
        return data_.size();
      }
      /**
       * <code>repeated double data = 3 [packed = true];</code>
       */
      public double getData(int index) {
        return data_.get(index);
      }
      /**
       * <code>repeated double data = 3 [packed = true];</code>
       */
      public Builder setData(
          int index, double value) {
        ensureDataIsMutable();
        data_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double data = 3 [packed = true];</code>
       */
      public Builder addData(double value) {
        ensureDataIsMutable();
        data_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double data = 3 [packed = true];</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDataIsMutable();
        super.addAll(values, data_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double data = 3 [packed = true];</code>
       */
      public Builder clearData() {
        data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated int64 rowNames = 4;
      private java.util.List<java.lang.Long> rowNames_ = java.util.Collections.emptyList();
      private void ensureRowNamesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          rowNames_ = new java.util.ArrayList<java.lang.Long>(rowNames_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int64 rowNames = 4;</code>
       */
      public java.util.List<java.lang.Long>
          getRowNamesList() {
        return java.util.Collections.unmodifiableList(rowNames_);
      }
      /**
       * <code>repeated int64 rowNames = 4;</code>
       */
      public int getRowNamesCount() {
        return rowNames_.size();
      }
      /**
       * <code>repeated int64 rowNames = 4;</code>
       */
      public long getRowNames(int index) {
        return rowNames_.get(index);
      }
      /**
       * <code>repeated int64 rowNames = 4;</code>
       */
      public Builder setRowNames(
          int index, long value) {
        ensureRowNamesIsMutable();
        rowNames_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 rowNames = 4;</code>
       */
      public Builder addRowNames(long value) {
        ensureRowNamesIsMutable();
        rowNames_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 rowNames = 4;</code>
       */
      public Builder addAllRowNames(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRowNamesIsMutable();
        super.addAll(values, rowNames_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 rowNames = 4;</code>
       */
      public Builder clearRowNames() {
        rowNames_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated int64 colNames = 5;
      private java.util.List<java.lang.Long> colNames_ = java.util.Collections.emptyList();
      private void ensureColNamesIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          colNames_ = new java.util.ArrayList<java.lang.Long>(colNames_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int64 colNames = 5;</code>
       */
      public java.util.List<java.lang.Long>
          getColNamesList() {
        return java.util.Collections.unmodifiableList(colNames_);
      }
      /**
       * <code>repeated int64 colNames = 5;</code>
       */
      public int getColNamesCount() {
        return colNames_.size();
      }
      /**
       * <code>repeated int64 colNames = 5;</code>
       */
      public long getColNames(int index) {
        return colNames_.get(index);
      }
      /**
       * <code>repeated int64 colNames = 5;</code>
       */
      public Builder setColNames(
          int index, long value) {
        ensureColNamesIsMutable();
        colNames_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 colNames = 5;</code>
       */
      public Builder addColNames(long value) {
        ensureColNamesIsMutable();
        colNames_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 colNames = 5;</code>
       */
      public Builder addAllColNames(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureColNamesIsMutable();
        super.addAll(values, colNames_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 colNames = 5;</code>
       */
      public Builder clearColNames() {
        colNames_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Matrix)
    }

    static {
      defaultInstance = new Matrix(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Matrix)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Matrix_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Matrix_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033src/main/proto/matrix.proto\"b\n\006Matrix\022" +
      "\020\n\010rowCount\030\001 \002(\005\022\020\n\010colCount\030\002 \002(\005\022\020\n\004d" +
      "ata\030\003 \003(\001B\002\020\001\022\020\n\010rowNames\030\004 \003(\003\022\020\n\010colNa" +
      "mes\030\005 \003(\003B(\n\030com.wesleykerr.generatedB\014M" +
      "atrixProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_Matrix_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_Matrix_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Matrix_descriptor,
              new java.lang.String[] { "RowCount", "ColCount", "Data", "RowNames", "ColNames", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
